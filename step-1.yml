AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  TeamRoleArn:
    Type: String
    Description: ARN of the TeamRole IAM TeamRole
Resources:
  WSS3DataKMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: A key for encrypting data written to S3
      EnableKeyRotation: 'true'
      PendingWindowInDays: 7
      KeyPolicy:
        Version: '2012-10-17'
        Id: ws-s3-key
        Statement:
          - Sid: Enable IAM user permissions for key administration
            Effect: Allow
            Principal:
              AWS: !Ref TeamRoleArn
            Action: kms:*
            Resource: '*'
          - Sid: Allow use of key
            Effect: Allow
            Principal:
              Service: s3.amazonaws.com
            Action:
              - kms:DescribeKey
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:generateDataKey
              - kms:GenerateDataKeyWithoutPlaintext
            Resource: '*'
          - Sid: Allow use by Redshift
            Effect: Allow
            Principal:
              AWS: !GetAtt WSRedshiftIAMRole.Arn
            Action:
              - kms:DescribeKey
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:generateDataKey
              - kms:GenerateDataKeyWithoutPlaintext
            Resource: '*'
  WSDatasetBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: 'true'
            ServerSideEncryptionByDefault:
              SSEAlgorithm: 'aws:kms'
              KMSMasterKeyID: !GetAtt WSS3DataKMSKey.KeyId
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: 'true'
  WSRedshiftIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: redshift.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 's3:*'
                Resource: '*'
        - PolicyName: KMSKeyaccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - kms:DescribeKey
                  - kms:Decrypt
                  - kms:ReEncrypt*
                  - kms:generateDataKey
                  - kms:GenerateDataKeyWithoutPlaintext
                Resource: '*'
#  WSBucketPolicy:
#    Type: AWS::S3::BucketPolicy
#    Properties:
#      Bucket: !Ref WSDatasetBucket
#      PolicyDocument:
#        Version: '2012-10-17'
#        Statement:
#          - Action:
#              - 's3:*'
#            Effect: Allow
#            Resource: !Join 
#              - ''
#              - - !GetAtt WSDatasetBucket.Arn
#                - /*
#            Principal:
#              AWS: !GetAtt WSRedshiftIAMRole.Arn
Outputs:
  DatasetBucket:
    Description: Location of the uploaded datasets
    Value: !Ref WSDatasetBucket
  RedshiftIAMRoleArn:
    Description: IAM role to use to access S3 objects from Redshift cluster
    Value: !GetAtt WSRedshiftIAMRole.Arn